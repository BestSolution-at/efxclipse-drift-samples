plugins {
    id 'java-library'
    id "biz.aQute.bnd.builder"
    id 'eclipse'
    
        id 'org.openjfx.javafxplugin'
    
}

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

import org.gradle.internal.os.OperatingSystem
def os = "macos"
def libDebugLib = file(OperatingSystem.current().getSharedLibraryName("../org.eclipse.fx.drift.samples.cpp.native/build/lib/main/debug/$os/samples"))
def libReleaseLib = file(OperatingSystem.current().getSharedLibraryName("../org.eclipse.fx.drift.samples.cpp.native/build/lib/main/release/$os/samples"))

task showLibs() {
	doLast {
		println OperatingSystem.current().familyName
		println libDebugLib
		println libReleaseLib
	}
}

task copyDebugLib(type: Copy) {
	//project(':org.eclipse.fx.drift.samples.cpp.native')
	from libDebugLib
	into file('src/main/resources/native')
}

def isJava11() {
	true
}

if (isJava11()) {

	javafx {
		version = "11.0.2"
		modules = [ 'javafx.controls' ]
	}
	
}

dependencies {

    api 'org.eclipse.fx:org.eclipse.fx.drift:999.0.0-SNAPSHOT'
    api project(':org.eclipse.fx.drift.samples')

    api 'org.osgi:org.osgi.service.component.annotations:1.3.0'

    api 'at.bestsolution.efxclipse.rt:org.eclipse.fx.core:3.6.0.201907240201'
}

jar {
	manifest {
		attributes('Private-Package': 'org.eclipse.fx.drift.samples.cpp.*')
        attributes('Import-Package': '!javafx.*, *')
	}
}