plugins {
    id 'application'
    //id "com.athaydes.osgi-run" version "1.6.0"
    id 'org.openjfx.javafxplugin'
    
}


def isJava11() {
	true
}

if (isJava11()) {

	javafx {
		version = "11.0.2"
		modules = [ 'javafx.controls' ]
	}
	
}

repositories {
    mavenCentral()
    maven {
        url = 'https://repo.eclipse.org/content/groups/efxclipse'
    }
    maven {
        url = 'https://maven.bestsolution.at/efxclipse-releases'
    }

}

subprojects {
    repositories {
        mavenCentral()
        maven {
            url = 'https://repo.eclipse.org/content/groups/efxclipse'
        }
        maven {
            url = 'https://maven.bestsolution.at/efxclipse-releases'
        }

    }
}

dependencies {
    implementation project(':org.eclipse.fx.drift.samples')
    implementation project(':org.eclipse.fx.drift.samples.lwjgl')
    implementation project(':org.eclipse.fx.drift.samples.cpp')

 /*   
    osgiRuntime 'org.eclipse.platform:org.eclipse.equinox.console:1.4.100'

    osgiRuntime 'org.osgi:org.osgi.service.cm:1.6.0'
    osgiRuntime 'org.osgi:org.osgi.service.metatype:1.4.0'
    osgiRuntime 'org.osgi:org.osgi.util.promise:1.1.1'
    osgiRuntime 'org.osgi:org.osgi.util.function:1.1.0'

    osgiRuntime 'org.apache.felix:org.apache.felix.scr:2.1.20'

    osgiRuntime 'org.eclipse.fx:org.eclipse.fx.drift:999.0.0-SNAPSHOT'
*/
    //osgiRuntime project(':org.eclipse.fx.drift.samples')
    //osgiRuntime project(':org.eclipse.fx.drift.samples.lwjgl')
    //osgiRuntime project(':org.eclipse.fx.drift.samples.cpp')
}




task run11(type: JavaExec) {
	executable = "${System.getenv('JAVA_HOME_11')}/bin/java"
	def modules = sourceSets.main.runtimeClasspath.filter { jar -> jar.getName().contains('javafx-') } .getAsPath()
	classpath = sourceSets.main.runtimeClasspath
	main = 'org.eclipse.fx.drift.samples.DriftSamples'
	jvmArgs = [
		'--module-path', modules,
		'--add-modules', 'javafx.controls',
		'--add-exports', 'javafx.graphics/com.sun.javafx.sg.prism=ALL-UNNAMED',
		'--add-exports', 'javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED', 
		'--add-exports', 'javafx.graphics/com.sun.javafx.util=ALL-UNNAMED', 
		'--add-exports', 'javafx.graphics/com.sun.javafx.tk=ALL-UNNAMED', 
		'--add-exports', 'javafx.graphics/com.sun.javafx.geom=ALL-UNNAMED', 
		'--add-exports', 'javafx.graphics/com.sun.javafx.geom.transform=ALL-UNNAMED', 
		'--add-exports', 'javafx.graphics/com.sun.javafx.scene.text=ALL-UNNAMED', 
		'--add-exports', 'javafx.graphics/com.sun.javafx.font=ALL-UNNAMED', 
		'--add-exports', 'javafx.graphics/com.sun.prism.paint=ALL-UNNAMED', 
		'--add-opens', 'javafx.graphics/com.sun.prism=ALL-UNNAMED',
		'--add-opens', 'javafx.graphics/com.sun.prism.es2=ALL-UNNAMED', 
		'--add-opens', 'javafx.graphics/com.sun.prism.d3d=ALL-UNNAMED', 
		'--add-opens', 'javafx.graphics/com.sun.prism.impl=ALL-UNNAMED'	
	]
}

task run8(type: JavaExec) {
	executable = "${System.getenv('JAVA_HOME_8')}/bin/java"
	classpath = sourceSets.main.runtimeClasspath
	main = 'org.eclipse.fx.drift.samples.DriftSamples'
	
}

/*
runOsgi {
    configSettings = 'equinox'
    osgiMain = 'org.eclipse.platform:org.eclipse.osgi:3.15.300'
    programArgs = '-console -consoleLog'
    bundles = []
    excludedBundles = ['.*animal-sniffer.*']
}
*/
